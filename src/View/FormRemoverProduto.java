/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControladorProduto;
import Model.Produto;
import Model.ProdutoDados;
import Model.Usuario;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author glemos
 */
public class FormRemoverProduto extends javax.swing.JFrame {

    private final ControladorProduto cp;
    private final Usuario user;

    private FormRemoverProduto() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private boolean validaCampos() {
        String msg = "";
        boolean teste = true;
        if (txtDataVal.getDate() == null) {
            msg = "É necessário preencher o campo de data de validade!\n";
            teste = false;
        }
        if (!"".equals(txtQtd.getText())) {
            try {
                Integer.parseInt(txtQtd.getText());
            } catch (Exception e) {
                txtQtd.setText("");
                msg += "No campo quantidade devem ser inseridos apenas números!\n";
                teste = false;
            }
        } else {
            msg += "É necessário preencher o campo de quantidade!\n";
            teste = false;
        }
        if (!"".equals(msg)) {
            JOptionPane.showMessageDialog(this, msg);
        }
        return teste;
    }

    private boolean validaCampos1() {
        String msg = "";
        boolean teste = true;
        if (txtDataVal.getDate() == null) {
            msg = "É necessário preencher o campo de data de validade!\n";
            teste = false;
        }
        if (!"".equals(msg)) {
            JOptionPane.showMessageDialog(this, msg);
        }
        return teste;
    }
    
    private void preencheCmbProdutos() {
        List<Produto> produto = this.cp.preencheCmbBox();
        if (produto.size() > 0) {
            for (Produto p : produto) {
                cmbProduto.addItem(p);
            }
        }
    }

    private void preencheCmbValidade() {
        cmbValidade.removeAllItems();
        List<ProdutoDados> produto = this.cp.preencheCmbValidade((Produto) cmbProduto.getSelectedItem());
        if (produto.size() > 0) {
            for (ProdutoDados p : produto) {
                cmbValidade.addItem(p.getDatavalidade());
            }
        }
    }

    private void checarQtdDisp() {
        if (validaCampos1() == true) {
            ProdutoDados pd = new ProdutoDados();
            pd.setIdproduto((Produto) cmbProduto.getSelectedItem());
            pd.setDatavalidade(txtDataVal.getDate());
            pd.setQuantidade(0);
            txtDisp.setText(String.valueOf(this.cp.qtdDisp(pd)));
            if (Integer.parseInt(txtDisp.getText()) == -1) {
                JOptionPane.showMessageDialog(this, "Produto com a data de validade informada é inexistente.");
                txtDataVal.setDate(null);
                txtQtd.setText("");
                txtDisp.setText("");
            } else {
                JOptionPane.showMessageDialog(this, this.cp.getErro());
                btnRemover.setEnabled(true);
                txtDataVal.setEnabled(false);
                cmbProduto.setEnabled(false);
                cmbValidade.setEnabled(false);
                btnChecarQtdDisp.setEnabled(false);
                btnLimpar.setEnabled(true);
            }
        }
    }

    public FormRemoverProduto(Usuario usuario) {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        this.cp = new ControladorProduto();
        this.user = usuario;
        preencheCmbProdutos();
        preencheCmbValidade();
        btnRemover.setEnabled(false);
        btnLimpar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        cmbProduto = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        btnRemover = new javax.swing.JButton();
        txtQtd = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtDataVal = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txtDisp = new javax.swing.JTextField();
        btnChecarQtdDisp = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        cmbValidade = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GDS - Remoção de Produtos");
        setMaximumSize(null);
        setMinimumSize(null);
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 204));
        jLabel2.setText("REMOVER PRODUTOS DO ESTOQUE");

        cmbProduto.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        cmbProduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProdutoItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel1.setText("Selecione um produto:");

        btnRemover.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        btnRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/add.png"))); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel5.setText("Quantidade:");

        jLabel7.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel7.setText("Data de Validade:");

        jLabel6.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel6.setText("Qtd. Disponível:");

        txtDisp.setEnabled(false);

        btnChecarQtdDisp.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        btnChecarQtdDisp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/add.png"))); // NOI18N
        btnChecarQtdDisp.setText("Checar Quantidade");
        btnChecarQtdDisp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChecarQtdDispActionPerformed(evt);
            }
        });

        btnLimpar.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        btnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/climpar.png"))); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        cmbValidade.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        cmbValidade.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbValidadeItemStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel8.setText("Datas de Validade Disponíveis:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(108, 108, 108))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDisp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtDataVal, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(btnRemover)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChecarQtdDisp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbValidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(txtDataVal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDisp, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemover)
                    .addComponent(btnChecarQtdDisp)
                    .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        if (validaCampos() == true) {
            if (Integer.parseInt(txtQtd.getText()) <= Integer.parseInt(txtDisp.getText())) {
                ProdutoDados pd = new ProdutoDados();
                pd.setIdproduto((Produto) cmbProduto.getSelectedItem());
                pd.setDatavalidade(txtDataVal.getDate());
                pd.setQuantidade(Integer.parseInt(txtQtd.getText()));
                this.cp.removerProdutoDados(pd, this.user);
                JOptionPane.showMessageDialog(this, this.cp.getErro());
                if (!this.cp.getErro().equals("Produto com a data de validade especificada não encontrado. Impossível remover.")) {
                    dispose();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Quantidade informada excede a disponível!");
            }
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnChecarQtdDispActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChecarQtdDispActionPerformed
        checarQtdDisp();
    }//GEN-LAST:event_btnChecarQtdDispActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        cmbProduto.setSelectedIndex(0);
        cmbProduto.setEnabled(true);
        cmbValidade.setEnabled(true);
        txtDataVal.setEnabled(true);
        txtDataVal.setDate(null);
        txtQtd.setText("");
        txtDisp.setText("");
        btnRemover.setEnabled(false);
        btnChecarQtdDisp.setEnabled(true);
        btnLimpar.setEnabled(false);
    }//GEN-LAST:event_btnLimparActionPerformed

    private void cmbValidadeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbValidadeItemStateChanged
        try {
            Date selectedItem = (Date) cmbValidade.getSelectedItem();
            txtDataVal.setDate(selectedItem);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cmbValidadeItemStateChanged

    private void cmbProdutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProdutoItemStateChanged
        preencheCmbValidade();
    }//GEN-LAST:event_cmbProdutoItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormRemoverProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormRemoverProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormRemoverProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormRemoverProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormRemoverProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChecarQtdDisp;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JComboBox cmbProduto;
    private javax.swing.JComboBox cmbValidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private com.toedter.calendar.JDateChooser txtDataVal;
    private javax.swing.JTextField txtDisp;
    private javax.swing.JTextField txtQtd;
    // End of variables declaration//GEN-END:variables
}
